#!/bin/bash

function create_partitions() {
  echo -e "o\nn\n\n\n\n\na\nw\n" | fdisk $disk

  echo "--------------------------------------------------------------------------------"
  echo "Partitions on '$disk' device have been created" 
  fdisk --list $disk

  echo "Press Enter to  ontinue, or wait 5 seconds..."
  read -t 5 -n 1  # Wait for 5 seconds or a single keypress
}

function format_partitions() {
  if [[ "$luks" == "true" ]]; then
    echo -n "$luks_password" | cryptsetup luksFormat ${disk}1 -
    echo -n "$luks_password" | cryptsetup open ${disk}1 cryptroot -
    mkfs.ext4 /dev/mapper/cryptroot
    cryptsetup close cryptroot
  else
    mkfs.ext4 ${disk}1
  fi

  echo "--------------------------------------------------------------------------------"
  echo "Partitions on '$disk' device have been formatted" 
  lsblk --fs $disk

  echo "Press Enter to  ontinue, or wait 5 seconds..."
  read -t 5 -n 1  # Wait for 5 seconds or a single keypress
}

function mount_partitions() {
  if [[ "$luks" == "true" ]]; then
    echo -n "$luks_password" | cryptsetup open ${disk}1 cryptroot -
    mount /dev/mapper/cryptroot $FOLDER_MNT
  else
    mount ${disk}1 $FOLDER_MNT
  fi

  echo "--------------------------------------------------------------------------------"
  if [[ "$luks" == "true" ]]; then
    echo "Partition '${disk}1' has been opened as cryptroot and mounted on $FOLDER_MNT"
  else
    echo "Partition '${disk}1' has been mounted on $FOLDER_MNT"
  fi

  echo "Press Enter to  ontinue, or wait 5 seconds..."
  read -t 5 -n 1  # Wait for 5 seconds or a single keypress
}

function umount_partitions() {
  umount -R $FOLDER_MNT
  if [[ "$luks" == "true" ]]; then
    cryptsetup close cryptroot
  fi

  echo "--------------------------------------------------------------------------------"
  if [[ "$luks" == "true" ]]; then
    echo "cryptroot has been closed and unmounted from $FOLDER_MNT"
  else
    echo "Partition '${disk}1' has been umounted from $FOLDER_MNT"
  fi

  echo "Press Enter to  ontinue, or wait 5 seconds..."
  read -t 5 -n 1  # Wait for 5 seconds or a single keypress
}

